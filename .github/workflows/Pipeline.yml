name: "Pipeline Cliente ElCamello"

on:
  push:
    branches: [ main ]
    tags:
      - "v1.0.*"
  pull_request:
    branches: [ main ]
    
  workflow_dispatch:

env:
  PROJECT_PATH: Cliente/El_Camello/El_Camello.csproj

jobs:
  Integracion:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Descargando .net 6.0
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0.x"
      
      - name: Instalado dependencias
        run: dotnet restore ${{ env.PROJECT_PATH }}
      
      - name: Compilando código
        run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore
      #Test here
  
  Entrega:
    if: github.ref != 'refs/tags/v1.0.*'
    needs: Integracion
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Descargando .net 6.0
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0.x"
          
      - name: Publicando
        run: dotnet publish ${{ env.PROJECT_PATH }} -c Release -r win10-x86 --self-contained -p:PublishSingleFile=true  
            
      - name: Comprimiendo publicación
        run: "Compress-Archive Cliente/El_Camello/bin/Release/net6.0-windows/win10-x86/publish/* ElCamello_${{ github.ref_name }}.zip"

      - name: Creando Release
        uses: ncipollo/release-action@v1.10.0
        id: create_release
        with:
          token: ${{ secrets.TOKEN_ELCAMELLO }}
          tag: ${{ github.ref }}
          name: ElCamello ${{ github.ref_name }}
      
      - name: Agregando ElCamello.zip
        uses: csexton/release-asset-action@v2
        with:
          github-token: ${{ secrets.TOKEN_ELCAMELLO }}
          file: ./ElCamello_${{ github.ref_name }}.zip
          release-url: ${{ steps.create_release.outputs.upload_url }}
          
